package enetwrapper;
import com.ochafik.lang.jnaerator.runtime.LibraryExtractor;
import com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper;
import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import java.nio.ByteBuffer;
/**
 * JNA Wrapper for library <b>EnetWrapper</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class EnetWrapperLibrary implements Library {
	public static final String JNA_LIBRARY_NAME = LibraryExtractor.getLibraryPath("EnetWrapper", true, EnetWrapperLibrary.class);
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(EnetWrapperLibrary.JNA_LIBRARY_NAME, MangledFunctionMapper.DEFAULT_OPTIONS);
	static {
		Native.register(EnetWrapperLibrary.JNA_LIBRARY_NAME);
	}
	public static final int ew_NONE = (int)0;
	public static final int ew_CONNECT = (int)1;
	public static final int ew_DISCONNECT = (int)2;
	public static final int ew_DATA = (int)3;
	
	/**
	 * Original signature : <code>bool ew_initialize(char*, int, int, int, int, int)</code><br>
	 * <i>native declaration : line 18</i><br>
	 * @deprecated use the safer methods {@link #ew_initialize(java.lang.String, int, int, int, int, int)} and {@link #ew_initialize(com.sun.jna.Pointer, int, int, int, int, int)} instead
	 */
	@Deprecated 
	public static native byte ew_initialize(Pointer interface$, int port, int maxclients, int channels, int maxdown, int maxup);
	
	/**
	 * Original signature : <code>bool ew_initialize(char*, int, int, int, int, int)</code><br>
	 * <i>native declaration : line 18</i>
	 */
	public static native byte ew_initialize(String interface$, int port, int maxclients, int channels, int maxdown, int maxup);
	
	/**
	 * Original signature : <code>bool ew_service(int, ew_Event*)</code><br>
	 * <i>native declaration : line 19</i>
	 */
	public static native byte ew_service(int timeout, ew_Event event);
	
	/**
	 * Original signature : <code>bool ew_send(int, int, bool, unsigned char*, long)</code><br>
	 * <i>native declaration : line 20</i><br>
	 * @deprecated use the safer methods {@link #ew_send(int, int, byte, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #ew_send(int, int, byte, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	@Deprecated 
	public static native byte ew_send(int clientid, int channel, byte reliable, Pointer data, NativeLong datalen);
	
	/**
	 * Original signature : <code>bool ew_send(int, int, bool, unsigned char*, long)</code><br>
	 * <i>native declaration : line 20</i>
	 */
	public static native byte ew_send(int clientid, int channel, byte reliable, ByteBuffer data, NativeLong datalen);
	
	public static boolean send(int clientid, int channel, boolean reliable, ByteBuffer data, long datalen) {
		NativeLong dl = new NativeLong(datalen);
		return ew_send(clientid, channel, reliable?(byte)1:(byte)0, data, dl) != 0;
	}
	
	/**
	 * Original signature : <code>bool ew_disconnect(int, int)</code><br>
	 * <i>native declaration : line 21</i>
	 */
	public static native byte ew_disconnect(int clientid, int reason);
	/**
	 * Original signature : <code>void ew_deinitialize()</code><br>
	 * <i>native declaration : line 22</i>
	 */
	public static native void ew_deinitialize();
}
